Traceback (most recent call last):
  File "E:\MainHomePage\.M_HomePage\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "E:\MainHomePage\.M_HomePage\Lib\site-packages\nbclient\client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\MainHomePage\.M_HomePage\Lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dr\AppData\Local\Programs\Python\Python312\Lib\asyncio\base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "E:\MainHomePage\.M_HomePage\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "E:\MainHomePage\.M_HomePage\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "E:\MainHomePage\.M_HomePage\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Importing Required Libraries:

# requests: This is a Python library used for sending HTTP requests. We use it to fetch the HTML content of the Telegram web preview.
# BeautifulSoup: from the bs4 module: This is used for parsing the HTML content and extracting the relevant information (in this case, the posts).

import requests
from bs4 import BeautifulSoup


# URL of the Public Channel:
# The URL points to the Telegram channel's web preview page, where posts are visible to users who don't have the app.
# URL of the Telegram channel preview page (https://t.me/s/CHANNLE_NAME)
channel_url = 'https://t.me/s/telegram'


# a GET request to fetch the channel page
response = requests.get(channel_url)

# check we get a successful response
response.raise_for_status()  

# Parsing the HTML Content of the page with BeautifulSoup
soup = BeautifulSoup(response.content, 'lxml')

# Finding All the Posts
# We need to locate all the HTML elements that contain the post content.
#  On the Telegram web preview, post texts are typically contained within <div> elements that have the class tgme_widget_message_text.
#  We use soup.find_all() to find all these <div> elements.
def get_posts(soup):
    posts = []
    
    # Find all the divs containing the posts
    posts_text = soup.find_all('div', class_='tgme_widget_message_text')
    for post_text in posts_text:

        # Check the post contains text
        if post_text:
            post_content = post_text.get_text(separator="\n").strip()
            posts.append(post_content)
    
    posts.reverse()
    return posts


posts = get_posts(soup)

#Corpus using in the next step
corpus = []

#Split each post by space into an array
for idx, post in enumerate(posts, 1):
    corpus.append(post.split())
    
print(*corpus, sep='\n')
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mTimeoutError[0m                              Traceback (most recent call last)
File [1;32mE:\MainHomePage\.M_HomePage\Lib\site-packages\urllib3\connectionpool.py:404[0m, in [0;36mHTTPConnectionPool._make_request[1;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[0;32m    403[0m [38;5;28;01mtry[39;00m:
[1;32m--> 404[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_validate_conn[49m[43m([49m[43mconn[49m[43m)[49m
[0;32m    405[0m [38;5;28;01mexcept[39;00m (SocketTimeout, BaseSSLError) [38;5;28;01mas[39;00m e:
[0;32m    406[0m     [38;5;66;03m# Py2 raises this as a BaseSSLError, Py3 raises it as socket timeout.[39;00m

File [1;32mE:\MainHomePage\.M_HomePage\Lib\site-packages\urllib3\connectionpool.py:1060[0m, in [0;36mHTTPSConnectionPool._validate_conn[1;34m(self, conn)[0m
[0;32m   1059[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mgetattr[39m(conn, [38;5;124m"[39m[38;5;124msock[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m):  [38;5;66;03m# AppEngine might not have  `.sock`[39;00m
[1;32m-> 1060[0m     [43mconn[49m[38;5;241;43m.[39;49m[43mconnect[49m[43m([49m[43m)[49m
[0;32m   1062[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m conn[38;5;241m.[39mis_verified:

File [1;32mE:\MainHomePage\.M_HomePage\Lib\site-packages\urllib3\connection.py:419[0m, in [0;36mHTTPSConnection.connect[1;34m(self)[0m
[0;32m    417[0m     context[38;5;241m.[39mload_default_certs()
[1;32m--> 419[0m [38;5;28mself[39m[38;5;241m.[39msock [38;5;241m=[39m [43mssl_wrap_socket[49m[43m([49m
[0;32m    420[0m [43m    [49m[43msock[49m[38;5;241;43m=[39;49m[43mconn[49m[43m,[49m
[0;32m    421[0m [43m    [49m[43mkeyfile[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mkey_file[49m[43m,[49m
[0;32m    422[0m [43m    [49m[43mcertfile[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mcert_file[49m[43m,[49m
[0;32m    423[0m [43m    [49m[43mkey_password[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mkey_password[49m[43m,[49m
[0;32m    424[0m [43m    [49m[43mca_certs[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mca_certs[49m[43m,[49m
[0;32m    425[0m [43m    [49m[43mca_cert_dir[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mca_cert_dir[49m[43m,[49m
[0;32m    426[0m [43m    [49m[43mca_cert_data[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mca_cert_data[49m[43m,[49m
[0;32m    427[0m [43m    [49m[43mserver_hostname[49m[38;5;241;43m=[39;49m[43mserver_hostname[49m[43m,[49m
[0;32m    428[0m [43m    [49m[43mssl_context[49m[38;5;241;43m=[39;49m[43mcontext[49m[43m,[49m
[0;32m    429[0m [43m    [49m[43mtls_in_tls[49m[38;5;241;43m=[39;49m[43mtls_in_tls[49m[43m,[49m
[0;32m    430[0m [43m[49m[43m)[49m
[0;32m    432[0m [38;5;66;03m# If we're using all defaults and the connection[39;00m
[0;32m    433[0m [38;5;66;03m# is TLSv1 or TLSv1.1 we throw a DeprecationWarning[39;00m
[0;32m    434[0m [38;5;66;03m# for the host.[39;00m

File [1;32mE:\MainHomePage\.M_HomePage\Lib\site-packages\urllib3\util\ssl_.py:449[0m, in [0;36mssl_wrap_socket[1;34m(sock, keyfile, certfile, cert_reqs, ca_certs, server_hostname, ssl_version, ciphers, ssl_context, ca_cert_dir, key_password, ca_cert_data, tls_in_tls)[0m
[0;32m    448[0m [38;5;28;01mif[39;00m send_sni:
[1;32m--> 449[0m     ssl_sock [38;5;241m=[39m [43m_ssl_wrap_socket_impl[49m[43m([49m
[0;32m    450[0m [43m        [49m[43msock[49m[43m,[49m[43m [49m[43mcontext[49m[43m,[49m[43m [49m[43mtls_in_tls[49m[43m,[49m[43m [49m[43mserver_hostname[49m[38;5;241;43m=[39;49m[43mserver_hostname[49m
[0;32m    451[0m [43m    [49m[43m)[49m
[0;32m    452[0m [38;5;28;01melse[39;00m:

File [1;32mE:\MainHomePage\.M_HomePage\Lib\site-packages\urllib3\util\ssl_.py:493[0m, in [0;36m_ssl_wrap_socket_impl[1;34m(sock, ssl_context, tls_in_tls, server_hostname)[0m
[0;32m    492[0m [38;5;28;01mif[39;00m server_hostname:
[1;32m--> 493[0m     [38;5;28;01mreturn[39;00m [43mssl_context[49m[38;5;241;43m.[39;49m[43mwrap_socket[49m[43m([49m[43msock[49m[43m,[49m[43m [49m[43mserver_hostname[49m[38;5;241;43m=[39;49m[43mserver_hostname[49m[43m)[49m
[0;32m    494[0m [38;5;28;01melse[39;00m:

File [1;32m~\AppData\Local\Programs\Python\Python312\Lib\ssl.py:455[0m, in [0;36mSSLContext.wrap_socket[1;34m(self, sock, server_side, do_handshake_on_connect, suppress_ragged_eofs, server_hostname, session)[0m
[0;32m    449[0m [38;5;28;01mdef[39;00m [38;5;21mwrap_socket[39m([38;5;28mself[39m, sock, server_side[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[0;32m    450[0m                 do_handshake_on_connect[38;5;241m=[39m[38;5;28;01mTrue[39;00m,
[0;32m    451[0m                 suppress_ragged_eofs[38;5;241m=[39m[38;5;28;01mTrue[39;00m,
[0;32m    452[0m                 server_hostname[38;5;241m=[39m[38;5;28;01mNone[39;00m, session[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[0;32m    453[0m     [38;5;66;03m# SSLSocket class handles server_hostname encoding before it calls[39;00m
[0;32m    454[0m     [38;5;66;03m# ctx._wrap_socket()[39;00m
[1;32m--> 455[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msslsocket_class[49m[38;5;241;43m.[39;49m[43m_create[49m[43m([49m
[0;32m    456[0m [43m        [49m[43msock[49m[38;5;241;43m=[39;49m[43msock[49m[43m,[49m
[0;32m    457[0m [43m        [49m[43mserver_side[49m[38;5;241;43m=[39;49m[43mserver_side[49m[43m,[49m
[0;32m    458[0m [43m        [49m[43mdo_handshake_on_connect[49m[38;5;241;43m=[39;49m[43mdo_handshake_on_connect[49m[43m,[49m
[0;32m    459[0m [43m        [49m[43msuppress_ragged_eofs[49m[38;5;241;43m=[39;49m[43msuppress_ragged_eofs[49m[43m,[49m
[0;32m    460[0m [43m        [49m[43mserver_hostname[49m[38;5;241;43m=[39;49m[43mserver_hostname[49m[43m,[49m
[0;32m    461[0m [43m        [49m[43mcontext[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[43m,[49m
[0;32m    462[0m [43m        [49m[43msession[49m[38;5;241;43m=[39;49m[43msession[49m
[0;32m    463[0m [43m    [49m[43m)[49m

File [1;32m~\AppData\Local\Programs\Python\Python312\Lib\ssl.py:1042[0m, in [0;36mSSLSocket._create[1;34m(cls, sock, server_side, do_handshake_on_connect, suppress_ragged_eofs, server_hostname, context, session)[0m
[0;32m   1041[0m                 [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mdo_handshake_on_connect should not be specified for non-blocking sockets[39m[38;5;124m"[39m)
[1;32m-> 1042[0m             [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mdo_handshake[49m[43m([49m[43m)[49m
[0;32m   1043[0m [38;5;28;01mexcept[39;00m:

File [1;32m~\AppData\Local\Programs\Python\Python312\Lib\ssl.py:1320[0m, in [0;36mSSLSocket.do_handshake[1;34m(self, block)[0m
[0;32m   1319[0m         [38;5;28mself[39m[38;5;241m.[39msettimeout([38;5;28;01mNone[39;00m)
[1;32m-> 1320[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_sslobj[49m[38;5;241;43m.[39;49m[43mdo_handshake[49m[43m([49m[43m)[49m
[0;32m   1321[0m [38;5;28;01mfinally[39;00m:

[1;31mTimeoutError[0m: [WinError 10060] A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond

During handling of the above exception, another exception occurred:

[1;31mReadTimeoutError[0m                          Traceback (most recent call last)
File [1;32mE:\MainHomePage\.M_HomePage\Lib\site-packages\requests\adapters.py:667[0m, in [0;36mHTTPAdapter.send[1;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[0;32m    666[0m [38;5;28;01mtry[39;00m:
[1;32m--> 667[0m     resp [38;5;241m=[39m [43mconn[49m[38;5;241;43m.[39;49m[43murlopen[49m[43m([49m
[0;32m    668[0m [43m        [49m[43mmethod[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mmethod[49m[43m,[49m
[0;32m    669[0m [43m        [49m[43murl[49m[38;5;241;43m=[39;49m[43murl[49m[43m,[49m
[0;32m    670[0m [43m        [49m[43mbody[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mbody[49m[43m,[49m
[0;32m    671[0m [43m        [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mheaders[49m[43m,[49m
[0;32m    672[0m [43m        [49m[43mredirect[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[0;32m    673[0m [43m        [49m[43massert_same_host[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[0;32m    674[0m [43m        [49m[43mpreload_content[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[0;32m    675[0m [43m        [49m[43mdecode_content[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[0;32m    676[0m [43m        [49m[43mretries[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmax_retries[49m[43m,[49m
[0;32m    677[0m [43m        [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout[49m[43m,[49m
[0;32m    678[0m [43m        [49m[43mchunked[49m[38;5;241;43m=[39;49m[43mchunked[49m[43m,[49m
[0;32m    679[0m [43m    [49m[43m)[49m
[0;32m    681[0m [38;5;28;01mexcept[39;00m (ProtocolError, [38;5;167;01mOSError[39;00m) [38;5;28;01mas[39;00m err:

File [1;32mE:\MainHomePage\.M_HomePage\Lib\site-packages\urllib3\connectionpool.py:801[0m, in [0;36mHTTPConnectionPool.urlopen[1;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[0;32m    799[0m     e [38;5;241m=[39m ProtocolError([38;5;124m"[39m[38;5;124mConnection aborted.[39m[38;5;124m"[39m, e)
[1;32m--> 801[0m retries [38;5;241m=[39m [43mretries[49m[38;5;241;43m.[39;49m[43mincrement[49m[43m([49m
[0;32m    802[0m [43m    [49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43merror[49m[38;5;241;43m=[39;49m[43me[49m[43m,[49m[43m [49m[43m_pool[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43m_stacktrace[49m[38;5;241;43m=[39;49m[43msys[49m[38;5;241;43m.[39;49m[43mexc_info[49m[43m([49m[43m)[49m[43m[[49m[38;5;241;43m2[39;49m[43m][49m
[0;32m    803[0m [43m[49m[43m)[49m
[0;32m    804[0m retries[38;5;241m.[39msleep()

File [1;32mE:\MainHomePage\.M_HomePage\Lib\site-packages\urllib3\util\retry.py:552[0m, in [0;36mRetry.increment[1;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[0;32m    551[0m [38;5;28;01mif[39;00m read [38;5;129;01mis[39;00m [38;5;28;01mFalse[39;00m [38;5;129;01mor[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39m_is_method_retryable(method):
[1;32m--> 552[0m     [38;5;28;01mraise[39;00m [43msix[49m[38;5;241;43m.[39;49m[43mreraise[49m[43m([49m[38;5;28;43mtype[39;49m[43m([49m[43merror[49m[43m)[49m[43m,[49m[43m [49m[43merror[49m[43m,[49m[43m [49m[43m_stacktrace[49m[43m)[49m
[0;32m    553[0m [38;5;28;01melif[39;00m read [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [1;32mE:\MainHomePage\.M_HomePage\Lib\site-packages\urllib3\packages\six.py:770[0m, in [0;36mreraise[1;34m(tp, value, tb)[0m
[0;32m    769[0m         [38;5;28;01mraise[39;00m value[38;5;241m.[39mwith_traceback(tb)
[1;32m--> 770[0m     [38;5;28;01mraise[39;00m value
[0;32m    771[0m [38;5;28;01mfinally[39;00m:

File [1;32mE:\MainHomePage\.M_HomePage\Lib\site-packages\urllib3\connectionpool.py:715[0m, in [0;36mHTTPConnectionPool.urlopen[1;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[0;32m    714[0m [38;5;66;03m# Make the request on the httplib connection object.[39;00m
[1;32m--> 715[0m httplib_response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_make_request[49m[43m([49m
[0;32m    716[0m [43m    [49m[43mconn[49m[43m,[49m
[0;32m    717[0m [43m    [49m[43mmethod[49m[43m,[49m
[0;32m    718[0m [43m    [49m[43murl[49m[43m,[49m
[0;32m    719[0m [43m    [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout_obj[49m[43m,[49m
[0;32m    720[0m [43m    [49m[43mbody[49m[38;5;241;43m=[39;49m[43mbody[49m[43m,[49m
[0;32m    721[0m [43m    [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mheaders[49m[43m,[49m
[0;32m    722[0m [43m    [49m[43mchunked[49m[38;5;241;43m=[39;49m[43mchunked[49m[43m,[49m
[0;32m    723[0m [43m[49m[43m)[49m
[0;32m    725[0m [38;5;66;03m# If we're going to release the connection in ``finally:``, then[39;00m
[0;32m    726[0m [38;5;66;03m# the response doesn't need to know about the connection. Otherwise[39;00m
[0;32m    727[0m [38;5;66;03m# it will also try to release it and we'll have a double-release[39;00m
[0;32m    728[0m [38;5;66;03m# mess.[39;00m

File [1;32mE:\MainHomePage\.M_HomePage\Lib\site-packages\urllib3\connectionpool.py:407[0m, in [0;36mHTTPConnectionPool._make_request[1;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[0;32m    405[0m [38;5;28;01mexcept[39;00m (SocketTimeout, BaseSSLError) [38;5;28;01mas[39;00m e:
[0;32m    406[0m     [38;5;66;03m# Py2 raises this as a BaseSSLError, Py3 raises it as socket timeout.[39;00m
[1;32m--> 407[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_raise_timeout[49m[43m([49m[43merr[49m[38;5;241;43m=[39;49m[43me[49m[43m,[49m[43m [49m[43murl[49m[38;5;241;43m=[39;49m[43murl[49m[43m,[49m[43m [49m[43mtimeout_value[49m[38;5;241;43m=[39;49m[43mconn[49m[38;5;241;43m.[39;49m[43mtimeout[49m[43m)[49m
[0;32m    408[0m     [38;5;28;01mraise[39;00m

File [1;32mE:\MainHomePage\.M_HomePage\Lib\site-packages\urllib3\connectionpool.py:358[0m, in [0;36mHTTPConnectionPool._raise_timeout[1;34m(self, err, url, timeout_value)[0m
[0;32m    357[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(err, SocketTimeout):
[1;32m--> 358[0m     [38;5;28;01mraise[39;00m ReadTimeoutError(
[0;32m    359[0m         [38;5;28mself[39m, url, [38;5;124m"[39m[38;5;124mRead timed out. (read timeout=[39m[38;5;132;01m%s[39;00m[38;5;124m)[39m[38;5;124m"[39m [38;5;241m%[39m timeout_value
[0;32m    360[0m     )
[0;32m    362[0m [38;5;66;03m# See the above comment about EAGAIN in Python 3. In Python 2 we have[39;00m
[0;32m    363[0m [38;5;66;03m# to specifically catch it and throw the timeout error[39;00m

[1;31mReadTimeoutError[0m: HTTPSConnectionPool(host='t.me', port=443): Read timed out. (read timeout=None)

During handling of the above exception, another exception occurred:

[1;31mReadTimeout[0m                               Traceback (most recent call last)
Cell [1;32mIn[3], line 17[0m
[0;32m     13[0m channel_url [38;5;241m=[39m [38;5;124m'[39m[38;5;124mhttps://t.me/s/telegram[39m[38;5;124m'[39m
[0;32m     16[0m [38;5;66;03m# a GET request to fetch the channel page[39;00m
[1;32m---> 17[0m response [38;5;241m=[39m [43mrequests[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[43mchannel_url[49m[43m)[49m
[0;32m     19[0m [38;5;66;03m# check we get a successful response[39;00m
[0;32m     20[0m response[38;5;241m.[39mraise_for_status()  

File [1;32mE:\MainHomePage\.M_HomePage\Lib\site-packages\requests\api.py:73[0m, in [0;36mget[1;34m(url, params, **kwargs)[0m
[0;32m     62[0m [38;5;28;01mdef[39;00m [38;5;21mget[39m(url, params[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m     63[0m [38;5;250m    [39m[38;5;124mr[39m[38;5;124;03m"""Sends a GET request.[39;00m
[0;32m     64[0m 
[0;32m     65[0m [38;5;124;03m    :param url: URL for the new :class:`Request` object.[39;00m
[1;32m   (...)[0m
[0;32m     70[0m [38;5;124;03m    :rtype: requests.Response[39;00m
[0;32m     71[0m [38;5;124;03m    """[39;00m
[1;32m---> 73[0m     [38;5;28;01mreturn[39;00m [43mrequest[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mget[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43mparams[49m[38;5;241;43m=[39;49m[43mparams[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [1;32mE:\MainHomePage\.M_HomePage\Lib\site-packages\requests\api.py:59[0m, in [0;36mrequest[1;34m(method, url, **kwargs)[0m
[0;32m     55[0m [38;5;66;03m# By using the 'with' statement we are sure the session is closed, thus we[39;00m
[0;32m     56[0m [38;5;66;03m# avoid leaving sockets open which can trigger a ResourceWarning in some[39;00m
[0;32m     57[0m [38;5;66;03m# cases, and look like a memory leak in others.[39;00m
[0;32m     58[0m [38;5;28;01mwith[39;00m sessions[38;5;241m.[39mSession() [38;5;28;01mas[39;00m session:
[1;32m---> 59[0m     [38;5;28;01mreturn[39;00m [43msession[49m[38;5;241;43m.[39;49m[43mrequest[49m[43m([49m[43mmethod[49m[38;5;241;43m=[39;49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[38;5;241;43m=[39;49m[43murl[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [1;32mE:\MainHomePage\.M_HomePage\Lib\site-packages\requests\sessions.py:589[0m, in [0;36mSession.request[1;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[0;32m    584[0m send_kwargs [38;5;241m=[39m {
[0;32m    585[0m     [38;5;124m"[39m[38;5;124mtimeout[39m[38;5;124m"[39m: timeout,
[0;32m    586[0m     [38;5;124m"[39m[38;5;124mallow_redirects[39m[38;5;124m"[39m: allow_redirects,
[0;32m    587[0m }
[0;32m    588[0m send_kwargs[38;5;241m.[39mupdate(settings)
[1;32m--> 589[0m resp [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mprep[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43msend_kwargs[49m[43m)[49m
[0;32m    591[0m [38;5;28;01mreturn[39;00m resp

File [1;32mE:\MainHomePage\.M_HomePage\Lib\site-packages\requests\sessions.py:703[0m, in [0;36mSession.send[1;34m(self, request, **kwargs)[0m
[0;32m    700[0m start [38;5;241m=[39m preferred_clock()
[0;32m    702[0m [38;5;66;03m# Send the request[39;00m
[1;32m--> 703[0m r [38;5;241m=[39m [43madapter[49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mrequest[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[0;32m    705[0m [38;5;66;03m# Total elapsed time of the request (approximately)[39;00m
[0;32m    706[0m elapsed [38;5;241m=[39m preferred_clock() [38;5;241m-[39m start

File [1;32mE:\MainHomePage\.M_HomePage\Lib\site-packages\requests\adapters.py:713[0m, in [0;36mHTTPAdapter.send[1;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[0;32m    711[0m     [38;5;28;01mraise[39;00m SSLError(e, request[38;5;241m=[39mrequest)
[0;32m    712[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(e, ReadTimeoutError):
[1;32m--> 713[0m     [38;5;28;01mraise[39;00m ReadTimeout(e, request[38;5;241m=[39mrequest)
[0;32m    714[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(e, _InvalidHeader):
[0;32m    715[0m     [38;5;28;01mraise[39;00m InvalidHeader(e, request[38;5;241m=[39mrequest)

[1;31mReadTimeout[0m: HTTPSConnectionPool(host='t.me', port=443): Read timed out. (read timeout=None)

